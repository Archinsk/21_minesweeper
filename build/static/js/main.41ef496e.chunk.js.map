{"version":3,"sources":["components/gamefield/gamefieldrow/cell/cell.js","components/gamefield/gamefieldrow/gamefieldrow.js","components/gamefield/gamestatus/result/result.js","components/gamefield/gamestatus/nameform/nameform.js","components/gamefield/gamestatus/recordtable/recordtable.js","components/gamefield/gamestatus/gamestatus.js","components/gamefield/gamefield.js","components/gametoolbar/flagscounter/flagscounter.js","components/gametoolbar/stepscounter/stepscounter.js","components/gametoolbar/timer/timer.js","components/gametoolbar/closedcells/closedcells.js","components/gametoolbar/restarter/restarter.js","components/gametoolbar/gametoolbar.js","index.js"],"names":["Cell","clName","letter","this","props","cellState","isFlag","isOpen","value","isDetonated","className","type","onClick","leftClick","x","y","onContextMenu","event","rightClick","React","Component","GameFieldRow","cellsPropsArray","arr","cellsArray","map","num","Result","result","res","toUpperCase","scores","score","NameForm","handleChange","setState","target","handleClick","player","state","request","console","log","recordTop","table","id","placeholder","onChange","required","RecordTable","topTen","scope","GameStatus","showTable","topArr","sort","a","b","isVisibleForm","isVisibleTable","isVisibleResult","resultPanel","readTop","timerID","setTimeout","hiddenResult","isRecord","GameField","gameField","rowsArr","rowsPropsArray","fields","rowsArray","FlagsCounter","flags","StepsCounter","steps","Timer","finishDate","isTimerGoing","timeInMs","min","sec","startDate","Math","floor","toString","padStart","readOnly","setInterval","tick","clearInterval","reboot","Date","now","ClosedCells","openedCells","round","cells","progressStyle","width","role","style","aria-valuenow","aria-valuemin","aria-valuemax","Restarter","GameToolbar","App","createGame","i","push","Array","fill","isMine","generateMines","countMineNeighbors","countFlags","isGameStopped","item","countMinesOnFields","random","countMinesOnField","row","length","column","neibArr","getNeighbors","minesAround","coordX","coordY","maxX","maxY","neighbors","j","coords","restart","startCell","autoRestart","countClosedTiles","autoRestartCount","gameStatus","topRecord","openCell","cell","openTile","gameOver","gameResult","countScore","time","timeScore","stepsScore","gameWin","toggleFlag","preventDefault","topTenRecordToState","ajaxReadRecord","url","requestText","topArray","action","xhr","XMLHttpRequest","onreadystatechange","readyState","status","topArrayObj","JSON","parse","responseText","obj","open","setRequestHeader","send","ajaxCreateRecord","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41ef496e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Cell extends React.Component {\r\n    render() {\r\n        let clName = 'btn cell-closed btn-block btn-sm cell p-0';\r\n        let letter = '';\r\n        if (this.props.cellState.isFlag) {\r\n            letter = \"\\uD83D\\uDEA9\";\r\n        }\r\n        if (this.props.cellState.isOpen) {\r\n            if (this.props.cellState.value !== 0) {\r\n                letter = this.props.cellState.value;\r\n            }\r\n            switch (this.props.cellState.value) {\r\n                case '\\uD83D\\uDCA3' :\r\n                    if (this.props.cellState.isDetonated) {\r\n                        clName = 'btn cell-mined btn-block btn-sm cell p-0';\r\n                    }\r\n                    break;\r\n                case 0 :\r\n                    clName = 'btn cell-clean btn-block btn-sm cell p-0';\r\n                    break;\r\n                case 1 :\r\n                    clName = 'btn cell-danger danger-1 btn-block btn-sm cell p-0';\r\n                    break;\r\n                case 2 :\r\n                    clName = 'btn cell-danger danger-2 btn-block btn-sm cell p-0';\r\n                    break;\r\n                case 3 :\r\n                    clName = 'btn cell-danger danger-3 btn-block btn-sm cell p-0';\r\n                    break;\r\n                default:\r\n                    clName = 'btn cell-danger danger-4 btn-block btn-sm cell p-0';\r\n            }\r\n        }\r\n        return (\r\n            <button className={clName} type=\"button\"\r\n                    onClick={() => this.props.leftClick(this.props.cellState.x, this.props.cellState.y)}\r\n                    onContextMenu={(event) => this.props.rightClick(event, this.props.cellState.x, this.props.cellState.y)}>\r\n                <div className=\"content\">\r\n                    {letter}\r\n                </div>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport Cell from \"./cell/cell\";\r\n\r\nclass GameFieldRow extends React.Component {\r\n    render() {\r\n        const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n        const cellsPropsArray = this.props.arr;\r\n        let cellsArray = numbers.map((num) =>\r\n            <div className=\"col p-0\">\r\n                <Cell key={num} cellState={cellsPropsArray[num]}\r\n                      leftClick={this.props.leftClick}\r\n                      rightClick={this.props.rightClick}\r\n                />\r\n            </div>);\r\n        return <div className=\"row mx-0\">\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    {cellsArray[0]}\r\n                    {cellsArray[1]}\r\n                    {cellsArray[2]}\r\n                    {cellsArray[3]}\r\n                </div>\r\n            </div>\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    {cellsArray[4]}\r\n                    {cellsArray[5]}\r\n                    {cellsArray[6]}\r\n                    {cellsArray[7]}\r\n                </div>\r\n            </div>\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    {cellsArray[8]}\r\n                    {cellsArray[9]}\r\n                    {cellsArray[10]}\r\n                    {cellsArray[11]}\r\n                </div>\r\n            </div>\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    {cellsArray[12]}\r\n                    {cellsArray[13]}\r\n                    {cellsArray[14]}\r\n                    {cellsArray[15]}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default GameFieldRow;","import React from \"react\";\r\n\r\nfunction Result(props) {\r\n    let result = ('You ' + props.res + '!').toUpperCase();\r\n    let scores = '';\r\n    if (props.res === 'Win') {\r\n        scores = <div className='score glow text-white text-center'>Score: {props.score}</div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"glow text-white text-center\">\r\n                {result}\r\n            </div>\r\n            {scores}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React from \"react\";\r\n\r\nclass NameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({value: event.target.value});\r\n    };\r\n\r\n    handleClick = () => {\r\n        let player = this.state.value;\r\n        let request = 'player=' + this.state.value + '&score=' + this.props.score;\r\n        console.log('Текст запроса в handleClick - ' + request);\r\n        this.props.recordTop('createRecord.php', request);\r\n        this.props.table(player);\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <form className='recordName'>\r\n                    <fieldset>\r\n                        <legend className='text-white text-center'>You are in top 10!</legend>\r\n                        <div className='form-row'>\r\n                            <div className=\"col-10\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"nameRecord\"\r\n                                       placeholder=\"Enter your name\" value={this.state.value}\r\n                                       onChange={this.handleChange} required/>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <button type=\"button\" className=\"btn btn-block btn-sm btn-primary p-0\"\r\n                                        onClick={this.handleClick}><span\r\n                                    className=\"material-icons\">arrow_forward</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NameForm;","import React from \"react\";\r\n\r\nfunction RecordTable(props) {\r\n    if (props.topTen) {\r\n        return (\r\n            <div>\r\n                <h4 className='text-white text-center'>Top 10 score</h4>\r\n                <table className=\"table table-bordered table-sm table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Score</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>{props.topTen[0].player}</td>\r\n                        <td>{props.topTen[0].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>{props.topTen[1].player}</td>\r\n                        <td>{props.topTen[1].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>3</td>\r\n                        <td>{props.topTen[2].player}</td>\r\n                        <td>{props.topTen[2].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4</td>\r\n                        <td>{props.topTen[3].player}</td>\r\n                        <td>{props.topTen[3].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>5</td>\r\n                        <td>{props.topTen[4].player}</td>\r\n                        <td>{props.topTen[4].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>6</td>\r\n                        <td>{props.topTen[5].player}</td>\r\n                        <td>{props.topTen[5].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>7</td>\r\n                        <td>{props.topTen[6].player}</td>\r\n                        <td>{props.topTen[6].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>8</td>\r\n                        <td>{props.topTen[7].player}</td>\r\n                        <td>{props.topTen[7].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>9</td>\r\n                        <td>{props.topTen[8].player}</td>\r\n                        <td>{props.topTen[8].score}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>10</td>\r\n                        <td>{props.topTen[9].player}</td>\r\n                        <td>{props.topTen[9].score}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h4 className='text-white text-center'>Top 10 score</h4>\r\n                <table className=\"table table-bordered table-sm table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Score</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>one</td>\r\n                        <td>10</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>two</td>\r\n                        <td>20</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>3</td>\r\n                        <td>three</td>\r\n                        <td>30</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4</td>\r\n                        <td>four</td>\r\n                        <td>40</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>5</td>\r\n                        <td>five</td>\r\n                        <td>50</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>6</td>\r\n                        <td>six</td>\r\n                        <td>60</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>7</td>\r\n                        <td>seven</td>\r\n                        <td>70</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>8</td>\r\n                        <td>eight</td>\r\n                        <td>80</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>9</td>\r\n                        <td>nine</td>\r\n                        <td>90</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>10</td>\r\n                        <td>ten</td>\r\n                        <td>99</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecordTable;","import React from \"react\";\r\nimport Result from \"./result/result\";\r\nimport NameForm from \"./nameform/nameform\";\r\nimport RecordTable from \"./recordtable/recordtable\";\r\n\r\nclass GameStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVisibleResult: true,\r\n            isVisibleForm: false,\r\n            isVisibleTable: false,\r\n            topTen: this.props.topTen,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('Рендер GameStatus');\r\n        let resultPanel;\r\n        let topTen = this.props.topTen;\r\n        let score = this.props.score;\r\n        if (this.props.res === 'Win') {\r\n            if (this.state.isVisibleResult) {\r\n                this.props.readTop('readRecord.php', '');\r\n                if (topTen) {\r\n                    if (score > topTen[9].score) {\r\n                        this.timerID = setTimeout(\r\n                            () => this.hiddenResult(),\r\n                            5000\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.state.isVisibleResult) {\r\n            resultPanel = <Result res={this.props.res} score={this.props.score} readTop={this.props.readTop}/>\r\n        }\r\n\r\n        if (this.state.isVisibleForm) {\r\n            resultPanel = <NameForm isRecord='true' recordTop={this.props.recordTop} score={this.props.score} table={this.showTable}/>\r\n        }\r\n\r\n        if (this.state.isVisibleTable) {\r\n            resultPanel = <RecordTable topTen={this.state.topTen}/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='resultBack'/>\r\n                <div className='result'>\r\n                    {resultPanel}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    hiddenResult() {\r\n        this.setState({\r\n            isVisibleResult: false,\r\n            isVisibleForm: true\r\n        });\r\n        console.log('Скрываем результат')\r\n    }\r\n\r\n    showTable = (player) => {\r\n        let score = this.props.score;\r\n        console.log('Очки в showTable = ' + score);\r\n        let topArr = this.props.topTen;\r\n        console.log('topArr = ' + topArr);\r\n        console.log('topArr[9] = ' + topArr[9]);\r\n        console.log('topArr[9].score = ' + topArr[9].score);\r\n        console.log('Очки последнего = ' + topArr[9].score);\r\n        topArr[9].player = player;\r\n        topArr[9].score = score;\r\n        topArr.sort(function(a, b) { return b.score - a.score; });\r\n        this.setState({\r\n            isVisibleForm: false,\r\n            isVisibleTable: true,\r\n            topTen: topArr,\r\n        });\r\n        console.log('Скрываем форму')\r\n    }\r\n}\r\n\r\nexport default GameStatus;","import React from \"react\";\r\nimport GameFieldRow from \"./gamefieldrow/gamefieldrow\";\r\nimport GameStatus from \"./gamestatus/gamestatus\";\r\n\r\nclass GameField extends React.Component {\r\n    render() {\r\n        console.log(\"Рендер игрового поля\");\r\n        let rowsArr = null;\r\n\r\n        const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n        const rowsPropsArray = this.props.fields;\r\n\r\n\r\n        if (rowsPropsArray) {\r\n            let rowsArray = numbers.map((num) => <GameFieldRow key={num} arr={rowsPropsArray[num]}\r\n                                                               leftClick={this.props.leftClick}\r\n                                                               rightClick={this.props.rightClick}/>);\r\n            rowsArr = <>{rowsArray}</>;\r\n        }\r\n\r\n        let gameField;\r\n        if (!this.props.res) {\r\n            gameField = (\r\n                <p>{rowsArr}</p>\r\n            )\r\n        } else {\r\n            gameField = (\r\n                <>\r\n                    <p>{rowsArr}</p>\r\n                    <GameStatus res={this.props.res} score={this.props.score} recordTop={this.props.recordTop}\r\n                                readTop={this.props.readTop} topTen={this.props.topTen}/>\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <div className='gamefield'>\r\n                {gameField}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameField;","import React from \"react\";\r\n\r\nclass FlagsCounter extends React.Component {\r\n\r\n    render() {\r\n        const letter = \"\\uD83D\\uDEA9\";\r\n        return (\r\n            <div className=\"col-4 col-sm-2 pb-2\">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text px-2\">{letter}</div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control text-center px-2\" value={this.props.flags}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FlagsCounter;","import React from \"react\";\r\n\r\nclass StepsCounter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-4 col-sm-2 pb-2\">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text px-2\"><span className=\"material-icons\">ads_click</span></div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control text-center px-2\" value={this.props.steps}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StepsCounter;","import React from \"react\";\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            finishDate: null,\r\n            isTimerGoing: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let timeInMs;\r\n        let min;\r\n        let sec;\r\n        if (this.props.startDate && this.state.finishDate && (this.state.finishDate > this.props.startDate)) {\r\n            timeInMs = this.state.finishDate - this.props.startDate;\r\n            min = (Math.floor(timeInMs / 1000 / 60) % 60).toString().padStart(2, '0');\r\n            sec = (Math.floor(timeInMs / 1000) % 60).toString().padStart(2, '0');\r\n        } else {\r\n            min = '00';\r\n            sec = '00'\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-4 col-sm-2 pb-2\">\r\n                <input type=\"text\" className=\"form-control text-center\" value={min + ':' + sec} readOnly/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('Компонент таймера обновлен');\r\n        if (!this.state.isTimerGoing && this.props.startDate && !this.props.finishDate) {\r\n            console.log('Запуск таймера');\r\n            this.timerID = setInterval(\r\n                () => this.tick(),\r\n                1000\r\n            );\r\n            this.setState(() => {\r\n                return {\r\n                    isTimerGoing: true\r\n                }\r\n            })\r\n        }\r\n        if (this.props.finishDate) {\r\n            clearInterval(this.timerID);\r\n            console.log('Таймер остановился');\r\n        }\r\n\r\n        if (this.props.reboot && this.state.isTimerGoing) {\r\n            console.log(this.props.reboot);\r\n            this.setState({\r\n                    isTimerGoing: false\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            finishDate: Date.now()\r\n        });\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from \"react\";\r\n\r\nclass ClosedCells extends React.Component {\r\n    render() {\r\n        let openedCells = Math.round((256 - this.props.cells) / 216 * 100);\r\n        let progressStyle = {width: openedCells + '%'};\r\n        return (\r\n            <div className=\"col-10 col-sm-5 pb-2\">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text material-icons\">lock_open</span>\r\n                    </div>\r\n                    <div className=\"progress form-control p-0\">\r\n                        <div className=\"progress-bar\" role=\"progressbar\" style={progressStyle}\r\n                             aria-valuenow={openedCells}\r\n                             aria-valuemin=\"0\" aria-valuemax=\"100\">{openedCells}%\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text material-icons\">lock</span>\r\n                    </div>\r\n                    {/*<p>*/}\r\n                    {/*    Уже открыто {256 - this.props.cells} , осталось открыть {this.props.cells - 40} ячеек*/}\r\n                    {/*</p>*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClosedCells;","import React from \"react\";\r\n\r\nfunction Restarter() {\r\n    return (\r\n        <div className=\"col-2 col-sm-1 pb-2\">\r\n            <button type=\"submit\" className=\"btn btn-block btn-sm p-0\">\r\n                <span className=\"material-icons\">autorenew</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restarter;","import React from \"react\";\r\nimport FlagsCounter from \"./flagscounter/flagscounter\";\r\nimport StepsCounter from \"./stepscounter/stepscounter\";\r\nimport Timer from \"./timer/timer\";\r\nimport ClosedCells from \"./closedcells/closedcells\";\r\nimport Restarter from \"./restarter/restarter\";\r\n\r\nclass GameToolbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <form className=\"game-bar\">\r\n                <div className=\"form-row pt-2 px-1 mx-0\">\r\n                    <FlagsCounter flags={this.props.flags}/>\r\n                    <StepsCounter steps={this.props.steps}/>\r\n                    <Timer startDate={this.props.startDate} finishDate={this.props.finishDate}\r\n                           reboot={this.props.reboot}/>\r\n                    <ClosedCells cells={this.props.cells}/>\r\n                    <Restarter onClick={this.props.onClick}/>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameToolbar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GameField from './components/gamefield/gamefield';\nimport GameToolbar from \"./components/gametoolbar/gametoolbar\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('Конструирование приложения');\n        this.state = {\n            gameField: null,\n            countMinesOnField: 0,\n            countFlags: null,\n            countClosedTiles: 256,\n            score: 0,\n            isGameStopped: true,\n            autoRestartCount: 0,\n            gameResult: null,\n            startCell: null,\n            steps: 0,\n            startDate: null,\n            finishDate: null,\n            topTen: null,\n        };\n    }\n\n    render() {\n        if (this.state.gameField) {\n            console.log('При рендере приложения состояние игрового поля: ' + this.state.gameField.map(item => (item.map(item => item.value))))\n        }\n        return (\n            <>\n                <h2 className=\"text-white text-center\">Minesweeper</h2>\n                <GameToolbar flags={this.state.countFlags} steps={this.state.steps} startDate={this.state.startDate}\n                             finishDate={this.state.finishDate}\n                             reboot={this.state.countClosedTiles === 256} cells={this.state.countClosedTiles}\n                             onClick={this.restart}/>\n                <GameField fields={this.state.gameField} leftClick={this.openCell} rightClick={this.toggleFlag}\n                           res={this.state.gameResult} score={this.state.score} recordTop={this.ajaxCreateRecord}\n                           readTop={this.ajaxReadRecord} topTen={this.state.topTen}/>\n            </>\n        )\n    }\n\n    componentDidMount() {\n        console.log('Компонент приложения смонтирован');\n        this.createGame();\n    }\n\n    componentDidUpdate() {\n        console.log('Компонент приложения обновлен');\n        if (this.state.startCell) {\n            this.openCell(this.state.startCell.x, this.state.startCell.y)\n        }\n        if (this.state.countClosedTiles === 40 && !this.state.gameResult) {\n            this.gameWin()\n        }\n        if (this.state.gameResult === 'Win' && this.state.score === 0) {\n            this.countScore();\n        }\n    }\n\n    createGame = () => {\n        console.log('Создаю игру');\n        let gameField = [];\n        for (let i = 0; i < 16; i++) {\n            gameField.push(new Array(16).fill(null));\n            gameField[i][0] = {x: 0, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][1] = {x: 1, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][2] = {x: 2, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][3] = {x: 3, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][4] = {x: 4, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][5] = {x: 5, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][6] = {x: 6, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][7] = {x: 7, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][8] = {x: 8, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][9] = {x: 9, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][10] = {x: 10, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][11] = {x: 11, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][12] = {x: 12, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][13] = {x: 13, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][14] = {x: 14, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n            gameField[i][15] = {x: 15, y: i, value: 0, isMine: false, isFlag: false, isOpen: false, isDetonated: false};\n        }\n        // console.log('Создано новое поле: ' + gameField);\n        gameField = this.generateMines(gameField);\n        gameField = this.countMineNeighbors(gameField);\n        // console.log('Поле после заполнения: ' + gameField.map( item => (item.map(item => item.value) ) ) );\n        this.setState({\n            gameField: gameField,\n            countFlags: 40,\n            isGameStopped: false\n        });\n        if (this.state.gameField) {\n            console.log('Состояние gameField после заполнения: ' + this.state.gameField.map(item => (item.map(item => item.value))));\n        }\n    };\n\n    generateMines = (gameField) => {\n        console.log('Генерация мин');\n        let countMinesOnFields = 0;\n        const size = 16;\n        const totalMines = 40;\n        const mine = '\\uD83D\\uDCA3';\n        //Случайная расстановка мин\n        while (countMinesOnFields < totalMines) {\n            let x = Math.floor(Math.random() * size);\n            let y = Math.floor(Math.random() * size);\n            if (gameField[x][y].value === mine) {\n                continue;\n            }\n            gameField[x][y].value = mine;\n            gameField[x][y].isMine = true;\n            countMinesOnFields++;\n        }\n        this.setState({\n            countMinesOnField: countMinesOnFields\n        });\n        return gameField\n    };\n\n    countMineNeighbors = (gameField) => {\n        console.log('Подсчет мин вокруг');\n        for (let row = 0; row < gameField.length; row++) {\n            for (let column = 0; column < gameField[row].length; column++) {\n                if (gameField[row][column].value === 0) {\n                    let neibArr = this.getNeighbors(column, row, 15, 15);\n                    let minesAround = 0;\n                    for (let i = 0; i < neibArr.length; i++) {\n                        let x = neibArr[i].coordX;\n                        let y = neibArr[i].coordY;\n                        if (gameField[y][x].value === \"\\uD83D\\uDCA3\") {\n                            minesAround++;\n                        }\n                    }\n                    gameField[row][column].value = minesAround;\n                }\n            }\n        }\n        return gameField\n    };\n\n    getNeighbors = (x, y, maxX = 15, maxY = 15) => {\n        let neighbors = [];\n        for (let i = x - 1; i <= x + 1; i++) {\n            for (let j = y - 1; j <= y + 1; j++) {\n                if (i < 0 || i > maxX) {\n                    continue;\n                }\n                if (j < 0 || j > maxY) {\n                    continue;\n                }\n                if (i === x && j === y) {\n                    continue;\n                }\n                let coords = {coordX: i, coordY: j};\n                neighbors.push(coords);\n            }\n        }\n        return neighbors;\n    };\n\n    restart = () => {\n        console.log('Ручной перезапуск игры');\n        this.setState({\n            startCell: null,\n        });\n        this.autoRestart();\n    };\n\n    autoRestart = () => {\n        console.log('Автоматический перезапуск игры');\n        this.setState({\n            gameField: null,\n            countMinesOnField: 0,\n            countFlags: null,\n            countClosedTiles: 256,\n            score: 0,\n            isGameStopped: true,\n            autoRestartCount: 0,\n            gameStatus: null,\n            steps: 0,\n            startDate: null,\n            finishDate: null,\n            topRecord: null,\n        });\n        // console.log('При перезапуске состояние игрового поля: ' + this.state.gameField)\n        this.createGame();\n    };\n\n    openCell = (x, y, reboot = false) => {\n        if (!this.state.isGameStopped) {\n            let cell = this.state.gameField[y][x];\n            if (!cell.isFlag && !cell.isOpen) {\n                this.setState((state) => {\n                    return {\n                        steps: state.steps + 1\n                    }\n                });\n            }\n            if (!this.state.startDate) {\n                this.setState({\n                    startDate: Date.now()\n                })\n            }\n            this.openTile(x, y, reboot)\n        }\n    };\n\n    openTile = (x, y, reboot = false) => {\n        if (!this.state.isGameStopped) {\n            let gameField = this.state.gameField;\n            let cell = gameField[y][x];\n            let countClosedTiles = this.state.countClosedTiles;\n            console.log('Открытие ячейки ' + cell.x + ' - ' + cell.y);\n            console.log('Закрытых ячеек - ' + countClosedTiles + ', значение ячейки - ' + cell.value);\n            if (countClosedTiles === 256 && cell.value !== 0 && !reboot) {\n                console.log('Первая ненулевая ячейка');\n                this.setState({\n                    startCell: {x, y},\n                });\n                this.autoRestart();\n            } else {\n                this.setState({\n                    startCell: null\n                });\n                console.log('Уже не первая ячейка');\n                if (!cell.isFlag && !cell.isOpen) {\n                    if (cell.isMine) {\n                        console.log('Здесь мина');\n                        cell.isOpen = true;\n                        cell.isDetonated = true;\n                        this.gameOver();\n                    } else if (cell.value === 0) {\n                        console.log('Закрытая нулевая ячейка');\n                        cell.isOpen = true;\n                        countClosedTiles--;\n                        let neibArr = this.getNeighbors(cell.x, cell.y);\n                        for (let i = 0; i < neibArr.length; i++) {\n                            if (!gameField[neibArr[i].coordY][neibArr[i].coordX].isOpen) {\n                                this.openTile(neibArr[i].coordX, neibArr[i].coordY, true)\n                            }\n                        }\n                        this.setState((state) => {\n                            return {\n                                gameField: gameField,\n                                countClosedTiles: state.countClosedTiles - 1\n                            }\n                        })\n                    } else {\n                        console.log('Закрытая ненулевая ячейка');\n                        cell.isOpen = true;\n                        countClosedTiles--;\n                        this.setState((state) => {\n                            return {\n                                gameField: gameField,\n                                countClosedTiles: state.countClosedTiles - 1\n                            }\n                        })\n                    }\n                }\n            }\n        }\n    };\n\n    gameOver = () => {\n        let gameField = this.state.gameField;\n        for (let i = 0; i < gameField.length; i++) {\n            for (let j = 0; j < gameField[i].length; j++) {\n                let cell = gameField[i][j];\n                if (cell.isMine && !cell.isOpen) {\n                    cell.isOpen = true;\n                }\n            }\n        }\n\n        this.setState({\n            isGameStopped: true,\n            gameResult: 'Lose',\n            gameField: gameField,\n            finishDate: Date.now()\n        });\n    };\n\n    countScore = () => {\n        const time = Math.floor((this.state.finishDate - this.state.startDate) / 1000);\n        const steps = this.state.steps;\n        let timeScore = 640;\n        let stepsScore = 1;\n\n        switch (true) {\n            case (time <= 30) :\n                timeScore += (30 - time);\n            case (time <= 60) :\n                timeScore += (60 - time);\n            case (time <= 90) :\n                timeScore += (90 - time);\n            case (time <= 120) :\n                timeScore += (120 - time);\n            case (time <= 150) :\n                timeScore += (150 - time);\n            case (time < 180) :\n                timeScore += (180 - time);\n                break;\n            case (time > 360) :\n                timeScore = 10;\n                break;\n            case (time >= 330) :\n                timeScore -= (time - 330);\n            case (time >= 300) :\n                timeScore -= (time - 300);\n            case (time >= 270) :\n                timeScore -= (time - 270);\n            case (time >= 240) :\n                timeScore -= (time - 240);\n            case (time >= 210) :\n                timeScore -= (time - 210);\n            case (time > 180) :\n                timeScore -= (time - 180);\n                break;\n            default:\n                timeScore = 640;\n        }\n\n        if (steps > 150) {\n            stepsScore = 0.1\n        } else if (steps > 75) {\n            const stepDown = 0.9 / 75;\n            stepsScore -= (steps - 75) * stepDown\n        }\n        if (steps < 75) {\n            const stepUp = 1.8 / 75;\n            stepsScore += (75 - steps) * stepUp;\n        }\n\n\n        this.setState({\n            score: Math.round(timeScore * stepsScore)\n        });\n        console.log('Время -' + time + ', кликов - ' + steps)\n    };\n\n    gameWin = () => {\n        let gameField = this.state.gameField;\n        for (let i = 0; i < gameField.length; i++) {\n            for (let j = 0; j < gameField[i].length; j++) {\n                let cell = gameField[i][j];\n                if (cell.isMine && !cell.isFlag) {\n                    cell.isFlag = true;\n                }\n            }\n        }\n\n        this.setState({\n            isGameStopped: true,\n            gameResult: 'Win',\n            finishDate: Date.now()\n        });\n    };\n\n\n    toggleFlag = (event, x, y) => {\n        event.preventDefault();\n        console.log('Изменение состояния флага');\n        if (!this.state.isGameStopped && this.state.countClosedTiles !== 256) {\n            let gameField = this.state.gameField;\n            let cell = gameField[y][x];\n            let countFlags = this.state.countFlags;\n            if (!cell.isOpen) {\n                if (!cell.isFlag) {\n                    if (countFlags > 0) {\n                        cell.isFlag = !cell.isFlag;\n                        countFlags--;\n                    }\n                } else {\n                    cell.isFlag = !cell.isFlag;\n                    countFlags++;\n                }\n            }\n            this.setState({\n                gameField: gameField,\n                countFlags: countFlags\n            });\n        }\n    };\n\n    topTenRecordToState = (arr) => {\n        this.setState({\n            topTen: arr,\n        });\n    };\n\n    //-----------------Ajax----------------\n    ajaxReadRecord = (url, requestText, action = this.topTenRecordToState) => {\n        let xhr = new XMLHttpRequest();\n        let topArray;\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4 && this.status === 200) {\n                let topArrayObj = JSON.parse('{\"obj\":[' + this.responseText + ']}');\n                topArray = topArrayObj.obj;\n                console.log('topArray = ' + topArray);\n                action(topArray);\n            }\n        };\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        xhr.send(requestText);\n    };\n\n    ajaxCreateRecord = (url, requestText, action) => {\n        let xhr = new XMLHttpRequest();\n        console.log('В Ajax-запросе текст запроса = ' + requestText)\n        xhr.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                console.log(this.responseText);\n            }\n        };\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        xhr.send(requestText);\n    };\n}\n\nReactDOM.render(\n    <App/>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}